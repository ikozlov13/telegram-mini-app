require('dotenv').config();
const express = require('express');
const cors = require('cors');
const TelegramBot = require('node-telegram-bot-api');
const path = require('path');

const app = express();
app.use(cors());
app.use(express.static(path.join(__dirname, 'public')));
app.use(express.json()); // –ü–æ–¥–¥–µ—Ä–∂–∫–∞ JSON-–∑–∞–ø—Ä–æ—Å–æ–≤

// –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
app.get('/', (req, res) => {
    res.sendFile(path.join(__dirname, 'public', 'index.html'));
});

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä
const PORT = process.env.PORT || 3000;
app.listen(PORT, () => {
   console.log(`Server is running on port ${PORT}`);
});

// –ü–æ–¥–∫–ª—é—á–∞–µ–º Telegram Bot API
const token = process.env.TELEGRAM_BOT_TOKEN;
const adminChatId = process.env.ADMIN_CHAT_ID; // ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–∫–∞–∑–æ–≤
console.log("TELEGRAM_BOT_TOKEN:", token); // –í—ã–≤–æ–¥–∏–º —Ç–æ–∫–µ–Ω –≤ –∫–æ–Ω—Å–æ–ª—å

if (!token) {
    console.error("–û—à–∏–±–∫–∞: TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω");
    process.exit(1);
}

const bot = new TelegramBot(token, { polling: true });

// –ö–æ–º–∞–Ω–¥–∞ /start –¥–ª—è –±–æ—Ç–∞
bot.onText(/\/start/, (msg) => {
    const chatId = msg.chat.id;
    bot.sendMessage(chatId, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∞–≥–∞–∑–∏–Ω –æ–¥–µ–∂–¥—ã!", {
        reply_markup: {
            keyboard: [[{
                text: "–û—Ç–∫—Ä—ã—Ç—å –º–∞–≥–∞–∑–∏–Ω",
                web_app: { url: "https://telegram-mini-app-zog6.onrender.com" } // URL –Ω–∞ Render
            }]],
            resize_keyboard: true
        }
    });
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –æ—Ç Mini App
app.post('/webapp-data', (req, res) => {
    const { chat_id, data } = req.body;
    if (chat_id && data) {
        bot.sendMessage(chat_id, "–ó–∞–∫–∞–∑ –ø–æ–ª—É—á–µ–Ω! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.");
    }
    res.sendStatus(200);
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–∫–∞–∑–æ–≤
bot.on("message", async (msg) => {
    if (msg?.web_app_data?.data) {
        try {
            const chatId = msg.chat.id;
            const data = JSON.parse(msg.web_app_data.data);
            
            // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–∫–∞–∑–µ
            const orderText = `üõç –ù–æ–≤—ã–π –∑–∞–∫–∞–∑!\n\n` +
                `üë§ –ü–æ–∫—É–ø–∞—Ç–µ–ª—å: ${msg.from.first_name} ${msg.from.last_name || ''} (@${msg.from.username || '–Ω–µ—Ç username'})\n` +
                `üìÖ –î–∞—Ç–∞: ${new Date().toLocaleString()}\n\n` +
                `üì¶ –¢–æ–≤–∞—Ä—ã:\n${data.items.map(item => 
                    `- ${item.name} x${item.quantity} = ${item.price * item.quantity} —Ä—É–±.`
                ).join('\n')}\n\n` +
                `üí∞ –ò—Ç–æ–≥–æ: ${data.total} —Ä—É–±.`;

            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É
            if (adminChatId) {
                await bot.sendMessage(adminChatId, orderText);
            }

            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–∫—É–ø–∞—Ç–µ–ª—é
            await bot.sendMessage(chatId, 
                "‚úÖ –í–∞—à –∑–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω!\n\n" +
                "–ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞."
            );

        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–∫–∞–∑–∞:', error);
            bot.sendMessage(chatId, 
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞.\n" +
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
            );
        }
    }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
bot.on('polling_error', (error) => {
    console.error('–û—à–∏–±–∫–∞ polling:', error);
});